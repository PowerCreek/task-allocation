#root {
  max-width: 1280px;
  margin: 0 auto;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.tasks table {
  width: min-content;
}
.custom-checkbox {
  appearance: none;
  -webkit-appearance: none;

  -moz-appearance: none;
  height: 1.136rem !important;
  aspect-ratio: 1.08 !important;
  cursor: pointer;
  display: flex;
  padding: 0px;
  border-radius: 3px;
  margin: unset;
  border-color: light-dark(rgb(110, 110, 110), rgb(122, 122, 122));
}

.custom-checkbox:focus {
  outline: none;
  border-color: light-dark(rgb(118, 118, 118), rgb(133, 133, 133)) !important;
  border-radius: 3px;
}

.custom-checkbox::before {
  content: "";
  width: 100%;
  aspect-ratio: 1;
  background-color: light-dark(#fff, #3b3b3b);
  border-radius: 3px;
  border-width: unset;
}

.custom-checkbox:hover {
  border-color: light-dark(rgb(80, 80, 80), rgb(153, 153, 153));
}

.custom-checkbox:checked {
  border: unset !important;
}

.custom-checkbox:checked::before {
  background-color: light-dark(#007bff, #99c8ff);
  border-color: light-dark(rgb(118, 118, 118), #99c8ff);
  box-shadow: none;
}

:root {
  --checkbox-svg-dark: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" fill="%233d3e3f" stroke="%233d3e3f" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="11" width="11" height="10" rx="3"/><path d="M9.5 11V7a3 3 0 0 1 6 0v4" fill="none"/></svg>');

  --checkbox-svg-light: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" fill="%23ffffff" stroke="%23ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="11" width="11" height="10" rx="3"/><path d="M9.5 11V7a3 3 0 0 1 6 0v4" fill="none"/></svg>');
}

.custom-checkbox:checked::after {
  content: "";
  position: absolute;
  width: 20px;
  aspect-ratio: 1;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  margin: 0px 0px 0px 1px;
  background-image: var(--checkbox-svg-dark);
}

@media (prefers-color-scheme: light) {
  .custom-checkbox:checked::after {
    background-image: var(--checkbox-svg-light);
  }
}

.custom-checkbox:hover::before {
  border-color: light-dark(transparent, #b3b3b3);
}

.custom-checkbox:focus-visible {
  outline: 2px solid light-dark(#b3b3b3, #007bff);
  outline-offset: 2px;
}

div:has(> .qualifierInputContainer) {
  display: flex;
  align-items: center;
  gap: 5px;
  margin: -24px -10px;
  position: relative;
  height: 100%;
  padding: 10px;
  flex-wrap: nowrap;
  white-space: nowrap;
}
.qualifierInputContainer {
  width: calc(100% - 21px);
  display: flex;
  padding-right: 10px;
  align-items: center;
}
input[type="checkbox"] {
  height: 1.27rem !important;
  aspect-ratio: 1;
  position: relative;
}
input[type="checkbox"]:focus-visible {
  outline: none;
}
input[name^="qualifierLocked"] {
  margin: unset;
}
div:has(> .qualifierInputContainer > [name^="qualifier"][disabled]) *,
div:has(> [name^="qualifier"][disabled]) {
  cursor: not-allowed;
}
input[name^="qualifier["] {
  direction: rtl;
  padding-right: 20px !important;
  width: 50px;
}
input[name^="qualifier"]::-webkit-inner-spin-button,
input[name^="qualifier"]::-webkit-outer-spin-button {
  right: auto;
}
.qualifierInputContainer::after {
  content: "%";
  font-size: 16px;
  color: #555;
  pointer-events: none;
  position: relative;
  right: 20px;
  width: 0px;
}
input:not([type="radio"]) {
  cursor: auto;
}
.loading-td {
  display: flex;
  padding: 1rem 2rem;
}
.td:has(button) {
  padding: 0px;
}
input[name*="toAssign"] {
  cursor: text;
}
input[name*="exclude"],
input[name*="toAssign"] {
  width: 50px;
}
input[name*="exclude"][readonly] {
  cursor: not-allowed;
}
/* Light Mode Styles */
.container {
  margin: 20px;
  font-family: Arial, sans-serif;
  background-color: #f5f5f5;
  color: #2c3e50;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
  display: grid;
  grid-auto-flow: dense row;
  gap: 1rem;
}
h3 {
  margin-bottom: 10px;
  font-size: 22px;
  font-weight: bold;
  color: #1a73e8;
}
.section {
  gap: 1rem;
  display: flex;
  flex-direction: column;
}
.section > label {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.label {
  align-self: start;
  font-weight: bold;
  color: #34495e;
}
.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 15px;
  background-color: #ecf0f3;
  border-radius: 8px;
  overflow: hidden;
}
.th,
.td {
  box-shadow: inset 0 0 0 0.02rem lightgray;
  padding: 10px;
  text-align: center;
}
.th {
  background-color: #b0c4de;
  color: #2c3e50;
  font-weight: bold;
}
.button {
  padding: 7px 12px;
  height: 30px;
  cursor: pointer;
  background-color: #1a73e8;
  color: white;
  border: none;
  transition: background-color 0.3s ease;
}
.button:hover {
  background-color: #1558b0;
}
select,
input {
  padding: 6px;
  border: 1px solid #bdc3c7;
  border-radius: 5px;
  background-color: #dfe6e9;
  color: #2c3e50;
  font-size: 14px;
  cursor: pointer;
}
select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}
select option {
  padding: 5px;
}
input:focus,
select:focus {
  outline: none;
  border-color: #1a73e8;
  box-shadow: 0 0 5px rgba(26, 115, 232, 0.5);
}

.button.number {
  width: 60px;
}

.section:nth-of-type(1) {
  justify-self: start;
  grid-row: 1;
  grid-column: 1 / span 1;
}
.section:nth-of-type(2) {
  grid-row: 1;
  grid-column: 2 / span 1;
  display: flex;
  flex-direction: column;
  height: min-content;
  justify-self: end;
  align-self: end;
  align-items: end;
  justify-content: space-between;
}
table ~ button {
  grid-row: 4;
  width: min-content;
  padding: 0.5rem 2rem !important;
}
.section:nth-of-type(3) {
  grid-row: 2;
  grid-column: 1 / span 2;
  display: flex;
  flex-direction: row;
  height: min-content;
}
.info-row {
  display: flex !important;
  flex-direction: row !important;
  grid-row: 2 !important;
  grid-column: 1 / span 2 !important;
  width: 100%;
  justify-content: space-between;
}
table {
  grid-row: 3;
  grid-column: 1 / span 2;
}
/* Dark Mode Styles */
@media (prefers-color-scheme: dark) {
  .container {
    background-color: #1e1e1e;
    color: #f0f0f0;
    border: 1px solid #444;
  }
  h3 {
    color: #ffa500;
  }
  label {
    color: #f0f0f0;
  }
  .table {
    background-color: #2a2a2a;
  }
  .th,
  .td {
    box-shadow: inset 0 0 0 0.02rem #555;
    color: #f0f0f0;
  }
  .th {
    background-color: #3a3a3a;
  }
  .button {
    background-color: #ff8c00;
    color: #1e1e1e;
    border: none;
    border-radius: 4px;
  }
  .button:hover {
    background-color: #e07b00;
  }
  select,
  input {
    background-color: #2a2a2a;
    color: #f0f0f0;
    border: 1px solid #666;
  }
  input:focus,
  select:focus {
    border-color: #ff8c00;
    box-shadow: 0 0 5px rgba(255, 140, 0, 0.5);
  }
  select option {
    padding: 5px;
  }
}
/* Styling for the radio group */
.radio-group {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: start;
  justify-self: start;
}
.radio-group:has([disabled]) *,
.radio-group:has([disabled]) {
  cursor: not-allowed;
}
.radio-group label {
  font-weight: normal;
  cursor: pointer;
}
.radio-group input {
  margin-right: 5px;
}
